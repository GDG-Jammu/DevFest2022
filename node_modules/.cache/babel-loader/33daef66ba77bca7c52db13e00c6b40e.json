{"remainingRequest":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!/Users/trilokia/devfest-jalandhar-2022/node_modules/babel-loader/lib/index.js!/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trilokia/devfest-jalandhar-2022/src/views/BadgesSpeakers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/trilokia/devfest-jalandhar-2022/src/views/BadgesSpeakers.vue","mtime":1669952818000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1669743926000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js","mtime":1669743926000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/babel-loader/lib/index.js","mtime":1669743929000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1669743926000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1669744525000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBnZGdJbWFnZSBmcm9tICJAL2Fzc2V0cy9pbWcvc3BlYWtlci5wbmciOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNCYWRnZUNvbXBvbmVudCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRvd25sb2FkYnRuOiBmYWxzZSwKICAgICAgY2FudmFzOiBudWxsLAogICAgICBzaGFwZTogIm9yaWdpbmFsIiwKICAgICAgaW1hZ2U6ICIiLAogICAgICBzaGFwZURhdGE6ICJvcmlnaW5hbCIsCiAgICAgIGN0eDogbnVsbCwKICAgICAgYmFubmVyOiBudWxsCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGRvY3VtZW50LnRpdGxlID0gIkJhZGdlcyB8IERldkZlc3QgSmFtbXUgMjAyMiI7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWQ6IGZ1bmN0aW9uIHVwbG9hZChlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoZSAmJiBlLnRhcmdldC5maWxlcyAmJiBlLnRhcmdldC5maWxlc1swXSkgewogICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7CgogICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuaW1hZ2UgPSBpbWc7CgogICAgICAgICAgICBfdGhpcy5kcmF3KCk7CiAgICAgICAgICB9OwoKICAgICAgICAgIGltZy5zcmMgPSBldmVudC50YXJnZXQucmVzdWx0OwogICAgICAgIH07CgogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGUudGFyZ2V0LmZpbGVzWzBdKTsKICAgICAgfQogICAgfSwKICAgIHVwbG9hZEltYWdlOiBmdW5jdGlvbiB1cGxvYWRJbWFnZSgpIHsKICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiaW5wdXQucHJvZmlsZS1pbnB1dCIpLmNsaWNrKCk7CiAgICAgIHRoaXMuZG93bmxvYWRidG4gPSB0cnVlOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZG93bmxvYWQiKS5zdHlsZS52aXNpYmlsaXR5ID0gInZpc2libGUiOwogICAgfSwKICAgIGNoYW5nZVNoYXBlOiBmdW5jdGlvbiBjaGFuZ2VTaGFwZSh0eXBlKSB7CiAgICAgIHRoaXMuc2hhcGUgPSB0eXBlOwogICAgICB0aGlzLmRyYXcoKTsKICAgIH0sCiAgICBkcmF3OiBmdW5jdGlvbiBkcmF3KCkgewogICAgICBpZiAodGhpcy5pbWFnZSkgewogICAgICAgIHN3aXRjaCAodGhpcy5zaGFwZSkgewogICAgICAgICAgY2FzZSAib3JpZ2luYWwiOgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSB0aGlzLmltYWdlLndpZHRoOwogICAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCA9IHRoaXMuaW1hZ2UuaGVpZ2h0OwogICAgICAgICAgICAgIHRoaXMuY3R4LmRyYXdJbWFnZSh0aGlzLmltYWdlLCAwLCAwKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IDI1MDA7CiAgICAgICAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gMjUwMDsKICAgICAgICAgICAgICB2YXIgaFJhdGlvID0gdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmltYWdlLndpZHRoOwogICAgICAgICAgICAgIHZhciB2UmF0aW8gPSB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLmltYWdlLmhlaWdodDsKICAgICAgICAgICAgICB2YXIgcmF0aW8gPSBNYXRoLm1heChoUmF0aW8sIHZSYXRpbyk7CiAgICAgICAgICAgICAgdmFyIHggPSAodGhpcy5jYW52YXMud2lkdGggLSB0aGlzLmltYWdlLndpZHRoICogcmF0aW8pIC8gMjsKCiAgICAgICAgICAgICAgdmFyIF95ID0gKHRoaXMuY2FudmFzLmhlaWdodCAtIHRoaXMuaW1hZ2UuaGVpZ2h0ICogcmF0aW8pIC8gMjsKCiAgICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIDAsIDAsIHRoaXMuaW1hZ2Uud2lkdGgsIHRoaXMuaW1hZ2UuaGVpZ2h0LCB4LCBfeSwgdGhpcy5pbWFnZS53aWR0aCAqIHJhdGlvLCB0aGlzLmltYWdlLmhlaWdodCAqIHJhdGlvKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmN0eC5jYW52YXMud2lkdGggPSAyNTAwOwogICAgICAgIHRoaXMuY3R4LmNhbnZhcy5oZWlnaHQgPSAyNTAwOwogICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICIjZmZmIjsKICAgICAgICB0aGlzLmN0eC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTsKICAgICAgfQoKICAgICAgdmFyIGhlaWdodCA9IHRoaXMuYmFubmVyLmhlaWdodCAvIHRoaXMuYmFubmVyLndpZHRoICogdGhpcy5jYW52YXMud2lkdGg7CiAgICAgIHZhciB5ID0gdGhpcy5jYW52YXMuaGVpZ2h0IC0gaGVpZ2h0OwogICAgICB2YXIgZm9udFNpemUgPSB0aGlzLmNhbnZhcy53aWR0aCAvIDE3LjI7CiAgICAgIHRoaXMuY3R4LmRyYXdJbWFnZSh0aGlzLmJhbm5lciwgMCwgMCwgdGhpcy5iYW5uZXIud2lkdGgsIHRoaXMuYmFubmVyLmhlaWdodCwgMCwgeSwgdGhpcy5jYW52YXMud2lkdGgsIGhlaWdodCk7CiAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICIjNzU3NTc1IjsKICAgICAgdGhpcy5jdHgudGV4dEFsaWduID0gImNlbnRlciI7CiAgICAgIHRoaXMuY3R4LnRleHRCYXNlbGluZSA9ICJtaWRkbGUiOwogICAgICB0aGlzLmN0eC5mb250ID0gIiIuY29uY2F0KGZvbnRTaXplLCAicHggR29vZ2xlIFNhbnMsIHNhbnMtc2VyaWYiKTsgLy8gY3R4LmZpbGxUZXh0KGNhdGVnb3J5LCBjYW52YXMud2lkdGggLyAyLCBmb250WSkKCiAgICAgIGlmICh0aGlzLnNoYXBlID09PSAiY2lyY2xlIikgewogICAgICAgIHRoaXMuY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICJkZXN0aW5hdGlvbi1pbiI7CiAgICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7CiAgICAgICAgdGhpcy5jdHguYXJjKHRoaXMuY2FudmFzLndpZHRoIC8gMiwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMiwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMiwgMCwgTWF0aC5QSSAqIDIpOwogICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpOwogICAgICAgIHRoaXMuY3R4LmZpbGwoKTsKICAgICAgfQogICAgfSwKICAgIGRvd25sb2FkOiBmdW5jdGlvbiBkb3dubG9hZCgpIHsKICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgIHZhciB1cmwgPSB0aGlzLmNhbnZhcy50b0RhdGFVUkwoImltYWdlL3BuZztiYXNlNjQiKTsKICAgICAgYS5kb3dubG9hZCA9ICIjRGV2RmVzdEphbGFuZGhhcl9iYWRnZS5wbmciOwogICAgICBhLmhyZWYgPSB1cmw7CiAgICAgIGEuY2xpY2soKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImNhbnZhcyIpOwogICAgdGhpcy5jdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogICAgdGhpcy5pbWFnZSA9ICIiOwogICAgdGhpcy5zaGFwZSA9ICJvcmlnaW5hbCI7CiAgICB0aGlzLmRvd25sb2FkYnRuID0gZmFsc2U7CiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZG93bmxvYWQiKS5zdHlsZS52aXNpYmlsaXR5ID0gImhpZGRlbiI7CiAgICB0aGlzLmJhbm5lciA9IG5ldyBJbWFnZSgpOwogICAgdGhpcy5iYW5uZXIuc3JjID0gZ2RnSW1hZ2U7IC8vIGNvbnNvbGUubG9nKHRoaXMuYmFubmVyKTsKCiAgICB0aGlzLmJhbm5lci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzMi5kcmF3KCk7CiAgICB9OwogIH0KfTs="},null]}