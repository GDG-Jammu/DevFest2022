{"remainingRequest":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trilokia/devfest-jalandhar-2022/src/views/Donate.vue?vue&type=template&id=48e9ca6e&scoped=true&","dependencies":[{"path":"/Users/trilokia/devfest-jalandhar-2022/src/views/Donate.vue","mtime":1669787801123},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1669743938865},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1669744525992},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1669743926100},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1669744525942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LW1haW4+CiAgPHYtY29udGFpbmVyIGZsdWlkIGNsYXNzPSIiPgogICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgIDx2LWNvbCBtZD0iMTIiIHNtPSIxMiIgY29scz0iMTIiIGxnPSIxMCIgY2xhc3M9Imdvb2dsZS1mb250IG15LTEwIj4KICAgICAgICA8di1jb250YWluZXIgZmx1aWQ+CiAgICAgICAgICA8di1yb3cgYWxpZ249InN0YXJ0IiBqdXN0aWZ5PSJzdGFydCI+CiAgICAgICAgICAgIDx2LWNvbCBtZD0iMTEiIGxnPSIxMSI+CiAgICAgICAgICAgICAgPHYtY29udGFpbmVyIGZsdWlkPgogICAgICAgICAgICAgICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iNiIgb3JkZXItbWQ9IjEiIG9yZGVyPSIxIiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEycHgiCiAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJyZXF1aXJlKCdAL2Fzc2V0cy9pbWcvamsuZ2lmJykiCiAgICAgICAgICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgICAgICAgICA8IS0tLSA8cCBjbGFzcz0ibXQtNCBtYi0wIj5TY2FuIHRoZSBRUiBDb2RlIHRvIERvbmF0ZTwvcD4tLT4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIG1kPSI2IiBvcmRlci1tZD0iMiIgb3JkZXI9IjIiPgogICAgICAgICAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgICAgIGdvb2dsZS1mb250CiAgICAgICAgICAgICAgICAgICAgICAgIGdkZy1oZWFkaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIG1iLTAKICAgICAgICAgICAgICAgICAgICAgICAgZ3JleS0tdGV4dAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LS1kYXJrZW4tMgogICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBPdXIgSW5pdGlhdGl2ZXMuLi4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBKYW1tdSBpcyBrbm93biBhcyB0aGUgQ2l0eSBvZiB0ZW1wbGVzLCB3ZSB3YW50IGl0IHRvIGJlIGtub3duIGZvciBpdHMgaW5ub3ZhdGlvbiBhbmQgaW5mcmFzdHJ1Y3R1cmUgaW4gdGhlIGZpZWxkIG9mIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgYXMgd2VsbC4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBUbyBzY2FsZSB1cCBhbmQgbWFrZSB0aGluZ3MgbW9yZSBpbXBhY3RmdWwsIHdlIGhvc3RlZCBudW1iZXIgb2YgZXZlbnRzIHdpdGggYSBtaXNzaW9uIHRvIG51cnR1cmUgdGhlIG5lZWRzIGFuZCBpbnRlcmVzdHMgb2YgdGhlIGxvY2FsIGRldmVsb3BlciBjb21tdW5pdHkgZWNvc3lzdGVtLgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGRhcmsgY29sb3I9IiM0Mjg1RjQiCiAgICAgICAgICAgICAgICAgICAgICA+Sm9pbiBHb29nbGUgRGV2ZWxvcGVyIEdyb3VwIEphbW11PC92LWNoaXAKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICA8di1yb3cganVzdGlmeT0iY2VudGVyIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPHYtY29sIG1kPSI4IiBvcmRlci1tZD0iMSIgb3JkZXI9IjIiPgogICAgICAgICAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgICAgIGdvb2dsZS1mb250CiAgICAgICAgICAgICAgICAgICAgICAgIGdkZy1oZWFkaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIG1iLTAKICAgICAgICAgICAgICAgICAgICAgICAgZ3JleS0tdGV4dAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LS1kYXJrZW4tMgogICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBMZWFybiwgYnVpbGQsIGFuZCBjb25uZWN0IGFzIGEgY29tbXVuaXR5CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgR29vZ2xlIERldmVsb3BlciBHcm91cHMgcmVwcmVzZW50cyBhIG5ldHdvcmsgb2YgdGVjaG5pY2FsIGNvbW11bml0aWVzIHRoYXQgb2ZmZXIgb3Bwb3J0dW5pdGllcyBmb3IgcHJvZmVzc2lvbmFsIGRldmVsb3BtZW50IGFuZCBjb25uZWN0aW9uLiBUaG9zZSB3aG8gam9pbiBjYW4gbGVhcm4gYWJvdXQgdGhlIGxhdGVzdCBHb29nbGUgdG9vbHMgYW5kIHRlY2hub2xvZ2llcywgYW5kIGNhbiBtZWV0IHdpdGggbG9jYWwgZGV2ZWxvcGVycyB3aXRoIHNpbWlsYXIgaW50ZXJlc3RzLgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgIFRoZSBwcm9ncmFtIHByaWRlcyBpdHNlbGYgb24gZm9zdGVyaW5nIGluY2x1c2l2ZSBlbnZpcm9ubWVudHMsIHdoZXJlIGV2ZXJ5b25lIGFuZCBhbnlvbmUgaW50ZXJlc3RlZCBpbiB0ZWNo4oCUZnJvbSBiZWdpbm5lciBkZXZlbG9wZXJzIHRvIGV4cGVyaWVuY2VkIHByb2Zlc3Npb25hbHPigJRhcmUgYWxsIHdlbGNvbWUgdG8gam9pbi4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBkYXJrIGNvbG9yPSIjNDI4NUY0IgogICAgICAgICAgICAgICAgICAgICAgPkpvaW4gR29vZ2xlIERldmVsb3BlciBHcm91cCBKYW1tdTwvdi1jaGlwCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8di1jb2wgbWQ9IjQiIG9yZGVyLW1kPSIyIiBvcmRlcj0iMSIgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICA8di1pbWcKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXItcmFkaXVzOiAxMnB4IgogICAgICAgICAgICAgICAgICAgICAgOnNyYz0icmVxdWlyZSgnQC9hc3NldHMvaW1nL2ltYWdlLmdpZicpIgogICAgICAgICAgICAgICAgICAgID48L3YtaW1nPgogICAgICAgICAgICAgICAgICAgPCEtLS0gPHAgY2xhc3M9Im10LTQgbWItMCI+U2NhbiB0aGUgUVIgQ29kZSB0byBEb25hdGU8L3A+LS0+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3YtY29udGFpbmVyPgogICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgPC92LXJvdz4KICAgICAgICA8L3YtY29udGFpbmVyPgogICAgICA8L3YtY29sPgogICAgPC92LXJvdz4KICA8L3YtY29udGFpbmVyPgo8L3YtbWFpbj4K"},null]}