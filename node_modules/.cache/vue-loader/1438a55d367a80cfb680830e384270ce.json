{"remainingRequest":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trilokia/devfest-jalandhar-2022/src/views/About.vue?vue&type=template&id=a04d18ee&scoped=true&","dependencies":[{"path":"/Users/trilokia/devfest-jalandhar-2022/src/views/About.vue","mtime":1670163380605},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1669743938000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1669744525000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1669743926000},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1669744525000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LW1haW4+CiAgPHYtY29udGFpbmVyIGZsdWlkIGNsYXNzPSIiPgogICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgIDx2LWNvbCBtZD0iMTIiIHNtPSIxMiIgY29scz0iMTIiIGxnPSIxMCIgY2xhc3M9Imdvb2dsZS1mb250IG15LTEwIj4KICAgICAgICA8di1jb250YWluZXIgZmx1aWQ+CiAgICAgICAgICA8di1yb3cgYWxpZ249InN0YXJ0IiBqdXN0aWZ5PSJzdGFydCI+CiAgICAgICAgICAgIDx2LWNvbCBtZD0iMTEiIGxnPSIxMSI+CiAgICAgICAgICAgICAgPHYtY29udGFpbmVyIGZsdWlkPgogICAgICAgICAgICAgICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iOCIgb3JkZXItbWQ9IjEiIG9yZGVyPSIyIj4KICAgICAgICAgICAgICAgICAgICA8cAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9IgogICAgICAgICAgICAgICAgICAgICAgICBnb29nbGUtZm9udAogICAgICAgICAgICAgICAgICAgICAgICBnZGctaGVhZGluZwogICAgICAgICAgICAgICAgICAgICAgICBtYi0wCiAgICAgICAgICAgICAgICAgICAgICAgIGdyZXktLXRleHQKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC0tZGFya2VuLTIKICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgTGVhcm4sIGJ1aWxkLCBhbmQgY29ubmVjdCBhcyBhIGNvbW11bml0eQogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgIEdvb2dsZSBEZXZlbG9wZXIgR3JvdXBzIHJlcHJlc2VudHMgYSBuZXR3b3JrIG9mIHRlY2huaWNhbCBjb21tdW5pdGllcyB0aGF0IG9mZmVyIG9wcG9ydHVuaXRpZXMgZm9yIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCBhbmQgY29ubmVjdGlvbi4gVGhvc2Ugd2hvIGpvaW4gY2FuIGxlYXJuIGFib3V0IHRoZSBsYXRlc3QgR29vZ2xlIHRvb2xzIGFuZCB0ZWNobm9sb2dpZXMsIGFuZCBjYW4gbWVldCB3aXRoIGxvY2FsIGRldmVsb3BlcnMgd2l0aCBzaW1pbGFyIGludGVyZXN0cy4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBUaGUgcHJvZ3JhbSBwcmlkZXMgaXRzZWxmIG9uIGZvc3RlcmluZyBpbmNsdXNpdmUgZW52aXJvbm1lbnRzLCB3aGVyZSBldmVyeW9uZSBhbmQgYW55b25lIGludGVyZXN0ZWQgaW4gdGVjaOKAlGZyb20gYmVnaW5uZXIgZGV2ZWxvcGVycyB0byBleHBlcmllbmNlZCBwcm9mZXNzaW9uYWxz4oCUYXJlIGFsbCB3ZWxjb21lIHRvIGpvaW4uCiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2RnLmNvbW11bml0eS5kZXYvZ2RnLWphbW11LyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtci0zIHYtYnRuIHYtYnRuLS1oYXMtYmcgdi1idG4tLXJvdW5kZWQgdGhlbWUtLWxpZ2h0IHYtc2l6ZS0tZGVmYXVsdCBwcmltYXJ5Ij48c3BhbiBjbGFzcz0idi1idG5fX2NvbnRlbnQiPkpvaW4gR0RHIEphbW11PC9zcGFuPjwvYT48YSBocmVmPSJodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9jb21tdW5pdHkvZ2RnIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InYtYnRuIHYtYnRuLS1vdXRsaW5lZCB2LWJ0bi0tcm91bmRlZCB0aGVtZS0tbGlnaHQgdi1zaXplLS1kZWZhdWx0Ij48c3BhbiBjbGFzcz0idi1idG5fX2NvbnRlbnQiPkFib3V0IEdvb2dsZSBEZXZlbG9wZXIncyBQcm9ncmFtPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iNCIgb3JkZXItbWQ9IjIiIG9yZGVyPSIxIiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEycHgiCiAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJyZXF1aXJlKCdAL2Fzc2V0cy9pbWcvaW1hZ2UuZ2lmJykiCiAgICAgICAgICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICA8IS0tLSAgICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iNiIgb3JkZXItbWQ9IjEiIG9yZGVyPSIxIiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEycHgiCiAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJyZXF1aXJlKCdAL2Fzc2V0cy9pbWcvamsuZ2lmJykiCiAgICAgICAgICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgICAgICAgICAgLS1wIGNsYXNzPSJtdC00IG1iLTAiPlNjYW4gdGhlIFFSIENvZGUgdG8gRG9uYXRlPC9wLS0KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIG1kPSI2IiBvcmRlci1tZD0iMiIgb3JkZXI9IjIiPgogICAgICAgICAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgICAgIGdvb2dsZS1mb250CiAgICAgICAgICAgICAgICAgICAgICAgIGdkZy1oZWFkaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIG1iLTAKICAgICAgICAgICAgICAgICAgICAgICAgZ3JleS0tdGV4dAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LS1kYXJrZW4tMgogICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBPdXIgSW5pdGlhdGl2ZXMuLi4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBKYW1tdSBpcyBrbm93biBhcyB0aGUgQ2l0eSBvZiB0ZW1wbGVzLCB3ZSB3YW50IGl0IHRvIGJlIGtub3duIGZvciBpdHMgaW5ub3ZhdGlvbiBhbmQgaW5mcmFzdHJ1Y3R1cmUgaW4gdGhlIGZpZWxkIG9mIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgYXMgd2VsbC4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBUbyBzY2FsZSB1cCBhbmQgbWFrZSB0aGluZ3MgbW9yZSBpbXBhY3RmdWwsIHdlIGhvc3RlZCBudW1iZXIgb2YgZXZlbnRzIHdpdGggYSBtaXNzaW9uIHRvIG51cnR1cmUgdGhlIG5lZWRzIGFuZCBpbnRlcmVzdHMgb2YgdGhlIGxvY2FsIGRldmVsb3BlciBjb21tdW5pdHkgZWNvc3lzdGVtLgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGRhcmsgY29sb3I9IiM0Mjg1RjQiIGhyZWY9Imh0dHBzOi8vZ2RnLmNvbW11bml0eS5kZXYvZ2RnLWphbW11LyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICA+Sm9pbiBHb29nbGUgRGV2ZWxvcGVyIEdyb3VwIEphbW11PC92LWNoaXAKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC92LXJvdz4tLT4KICAgICAgICAgICAgICAgPCEtLSA8di1yb3cganVzdGlmeT0iY2VudGVyIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBweC01IHB4LW1kLTEwIHBiLTAgYWxpZ24tY2VudGVyIGp1c3RpZnktY2VudGVyIj48ZGl2IGNsYXNzPSJvcmRlci0yIG9yZGVyLW1kLTEgY29sLXNtLTggY29sLW1kLTggY29sLTEyIj48cCBjbGFzcz0iZ2RnLWhlYWRpbmcgbWItMCI+R29vZ2xlIERldmVsb3BlciBHcm91cCBKYW1tdTwvcD48cD5Hb29nbGUgRGV2ZWxvcGVyIEdyb3VwIEphbW11IGlzIGFuIGluaXRpYXRpdmUgdG8gY29uY2VudHJhdGUgdGhlIGVmZm9ydHMgb2YgbWFueSBkZXZlbG9wZXJzIGluIGFuZCBhcm91bmQgSmFtbXUgYW5kIEthc2htaXIuIFdlIGFyZSBhIGdyb3dpbmcgY29tbXVuaXR5IG9mIDUwMCsgRGV2ZWxvcGVycyBhbmQgaGF2ZSBob3N0ZWQgYSBudW1iZXIgb2YgZXZlbnRzLCBjb25mZXJlbmNlcyBhbmQgd29ya3Nob3BzIHdpdGggdGhlIGFpbSBvZiBMZWFybmluZywgU2hhcmluZywgTmV0d29ya2luZyBhbmQgQ29sbGFib3JhdGluZyB3aXRoIG90aGVycy48YnI+PGJyPk91ciBtaXNzaW9uIGlzIHRvIGVtcG93ZXIgb3VyIGNvbW11bml0eSBieSBlbmhhbmNpbmcgdGhlaXIgc2tpbGxzIHRvIHNwZWFrIGFib3V0IHRoZWlyIGxlYXJuaW5ncyB3aXRoIGhhbmRzLW9uIHByYWN0aWNlcyBhbmQgY3JlYXRpbmcgc29sdXRpb25zLjwvcD48ZGl2IGNsYXNzPSJtYi01Ij48YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL0dER0phbW11IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InYtYnRuIHYtYnRuLS1pY29uIHYtYnRuLS1yb3VuZCB0aGVtZS0tbGlnaHQgdi1zaXplLS1kZWZhdWx0Ij48c3BhbiBjbGFzcz0idi1idG5fX2NvbnRlbnQiPjxpIGFyaWEtaGlkZGVuPSJ0cnVlIiBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktdHdpdHRlciB0aGVtZS0tbGlnaHQiPjwvaT48L3NwYW4+PC9hPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L2dvb2dsZS1kZXZlbG9wZXItY2x1Yi1qYW1tdSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJ2LWJ0biB2LWJ0bi0taWNvbiB2LWJ0bi0tcm91bmQgdGhlbWUtLWxpZ2h0IHYtc2l6ZS0tZGVmYXVsdCI+PHNwYW4gY2xhc3M9InYtYnRuX19jb250ZW50Ij48aSBhcmlhLWhpZGRlbj0idHJ1ZSIgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmtlZGluIHRoZW1lLS1saWdodCI+PC9pPjwvc3Bhbj48L2E+PGEgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9nZGdqYW1tdS8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0idi1idG4gdi1idG4tLWljb24gdi1idG4tLXJvdW5kIHRoZW1lLS1saWdodCB2LXNpemUtLWRlZmF1bHQiPjxzcGFuIGNsYXNzPSJ2LWJ0bl9fY29udGVudCI+PGkgYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1pbnN0YWdyYW0gdGhlbWUtLWxpZ2h0Ij48L2k+PC9zcGFuPjwvYT48YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vR0RHLUphbW11LTEwMjUzNDk2ODM0MTMxMSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJ2LWJ0biB2LWJ0bi0taWNvbiB2LWJ0bi0tcm91bmQgdGhlbWUtLWxpZ2h0IHYtc2l6ZS0tZGVmYXVsdCI+PHNwYW4gY2xhc3M9InYtYnRuX19jb250ZW50Ij48aSBhcmlhLWhpZGRlbj0idHJ1ZSIgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWZhY2Vib29rIHRoZW1lLS1saWdodCI+PC9pPjwvc3Bhbj48L2E+PGEgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vY2hhbm5lbC9VQ3hORUxQVGZrRzNSYy1CUk9qVnhtTkEiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0idi1idG4gdi1idG4tLWljb24gdi1idG4tLXJvdW5kIHRoZW1lLS1saWdodCB2LXNpemUtLWRlZmF1bHQiPjxzcGFuIGNsYXNzPSJ2LWJ0bl9fY29udGVudCI+PGkgYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS15b3V0dWJlIHRoZW1lLS1saWdodCI+PC9pPjwvc3Bhbj48L2E+PC9kaXY+PGEgaHJlZj0iaHR0cHM6Ly9nZGcuY29tbXVuaXR5LmRldi9nZGctamFtbXUvIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9Im1yLTMgdi1idG4gdi1idG4tLWhhcy1iZyB2LWJ0bi0tcm91bmRlZCB0aGVtZS0tbGlnaHQgdi1zaXplLS1kZWZhdWx0IHByaW1hcnkiPjxzcGFuIGNsYXNzPSJ2LWJ0bl9fY29udGVudCI+Sm9pbiB1czwvc3Bhbj48L2E+PGEgaHJlZj0iaHR0cHM6Ly9nZGcuY29tbXVuaXR5LmRldi9nZGctamFtbXUvIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InYtYnRuIHYtYnRuLS1vdXRsaW5lZCB2LWJ0bi0tcm91bmRlZCB0aGVtZS0tbGlnaHQgdi1zaXplLS1kZWZhdWx0Ij48c3BhbiBjbGFzcz0idi1idG5fX2NvbnRlbnQiPk1vcmUgaW5mbzwvc3Bhbj48L2E+PC9kaXY+PGRpdiBjbGFzcz0ib3JkZXItMSBvcmRlci1tZC0yIGNvbC1zbS00IGNvbC1tZC00IGNvbC0xMiI+PGRpdiBjbGFzcz0idi1pbWFnZSB2LXJlc3BvbnNpdmUgdGhlbWUtLWxpZ2h0Ij48ZGl2IGNsYXNzPSJ2LXJlc3BvbnNpdmVfX3NpemVyIiBzdHlsZT0icGFkZGluZy1ib3R0b206IDEwMCU7Ij48L2Rpdj48ZGl2IGNsYXNzPSJ2LWltYWdlX19pbWFnZSB2LWltYWdlX19pbWFnZS0tY292ZXIiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJnF1b3Q7aHR0cHM6Ly90cmlsb2tpYWluYy5jb20vamsuZ2lmJnF1b3Q7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjsiPjwvZGl2PjxkaXYgY2xhc3M9InYtcmVzcG9uc2l2ZV9fY29udGVudCIgc3R5bGU9IndpZHRoOiAxMDAwcHg7Ij48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvdi1yb3c+LS0+CiAgICAgICAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgICAgPC92LWNvbD4KICAgIDwvdi1yb3c+CiAgPC92LWNvbnRhaW5lcj4KPC92LW1haW4+Cg=="},null]}