{"remainingRequest":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trilokia/devfest-jalandhar-2022/src/views/Donate.vue?vue&type=template&id=a0b119a2&scoped=true&","dependencies":[{"path":"/Users/trilokia/devfest-jalandhar-2022/src/views/Donate.vue","mtime":1669787009841},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1669743938865},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1669744525992},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1669743926100},{"path":"/Users/trilokia/devfest-jalandhar-2022/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1669744525942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LW1haW4+CiAgPHYtY29udGFpbmVyIGZsdWlkIGNsYXNzPSIiPgogICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgIDx2LWNvbCBtZD0iMTIiIHNtPSIxMiIgY29scz0iMTIiIGxnPSIxMCIgY2xhc3M9Imdvb2dsZS1mb250IG15LTEwIj4KICAgICAgICA8di1jb250YWluZXIgZmx1aWQ+CiAgICAgICAgICA8di1yb3cgYWxpZ249InN0YXJ0IiBqdXN0aWZ5PSJzdGFydCI+CiAgICAgICAgICAgIDx2LWNvbCBtZD0iMTEiIGxnPSIxMSI+CiAgICAgICAgICAgICAgPHYtY29udGFpbmVyIGZsdWlkPgogICAgICAgICAgICAgICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iOCIgb3JkZXItbWQ9IjEiIG9yZGVyPSIyIj4KICAgICAgICAgICAgICAgICAgICA8cAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9IgogICAgICAgICAgICAgICAgICAgICAgICBnb29nbGUtZm9udAogICAgICAgICAgICAgICAgICAgICAgICBnZGctaGVhZGluZwogICAgICAgICAgICAgICAgICAgICAgICBtYi0wCiAgICAgICAgICAgICAgICAgICAgICAgIGdyZXktLXRleHQKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC0tZGFya2VuLTIKICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgTGVhcm4sIGJ1aWxkLCBhbmQgY29ubmVjdCBhcyBhIGNvbW11bml0eQogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgIEdvb2dsZSBEZXZlbG9wZXIgR3JvdXBzIHJlcHJlc2VudHMgYSBuZXR3b3JrIG9mIHRlY2huaWNhbCBjb21tdW5pdGllcyB0aGF0IG9mZmVyIG9wcG9ydHVuaXRpZXMgZm9yIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCBhbmQgY29ubmVjdGlvbi4gVGhvc2Ugd2hvIGpvaW4gY2FuIGxlYXJuIGFib3V0IHRoZSBsYXRlc3QgR29vZ2xlIHRvb2xzIGFuZCB0ZWNobm9sb2dpZXMsIGFuZCBjYW4gbWVldCB3aXRoIGxvY2FsIGRldmVsb3BlcnMgd2l0aCBzaW1pbGFyIGludGVyZXN0cy4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBUaGUgcHJvZ3JhbSBwcmlkZXMgaXRzZWxmIG9uIGZvc3RlcmluZyBpbmNsdXNpdmUgZW52aXJvbm1lbnRzLCB3aGVyZSBldmVyeW9uZSBhbmQgYW55b25lIGludGVyZXN0ZWQgaW4gdGVjaOKAlGZyb20gYmVnaW5uZXIgZGV2ZWxvcGVycyB0byBleHBlcmllbmNlZCBwcm9mZXNzaW9uYWxz4oCUYXJlIGFsbCB3ZWxjb21lIHRvIGpvaW4uCiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZGFyayBjb2xvcj0iIzQyODVGNCIKICAgICAgICAgICAgICAgICAgICAgID5Kb2luIEdvb2dsZSBEZXZlbG9wZXIgR3JvdXAgSmFtbXU8L3YtY2hpcAogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIG1kPSI0IiBvcmRlci1tZD0iMiIgb3JkZXI9IjEiIGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLXJhZGl1czogMTJweCIKICAgICAgICAgICAgICAgICAgICAgIDpzcmM9InJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9pbWFnZS5naWYnKSIKICAgICAgICAgICAgICAgICAgICA+PC92LWltZz4KICAgICAgICAgICAgICAgICAgIDwhLS0tIDxwIGNsYXNzPSJtdC00IG1iLTAiPlNjYW4gdGhlIFFSIENvZGUgdG8gRG9uYXRlPC9wPi0tPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICAgIDx2LXJvdyBqdXN0aWZ5PSJjZW50ZXIiIGFsaWduPSJjZW50ZXIiPgogICAgICAgICAgICAgICAgICA8di1jb2wgbWQ9IjgiIG9yZGVyLW1kPSIxIiBvcmRlcj0iMiI+CiAgICAgICAgICAgICAgICAgICAgPHAKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSIKICAgICAgICAgICAgICAgICAgICAgICAgZ29vZ2xlLWZvbnQKICAgICAgICAgICAgICAgICAgICAgICAgZ2RnLWhlYWRpbmcKICAgICAgICAgICAgICAgICAgICAgICAgbWItMAogICAgICAgICAgICAgICAgICAgICAgICBncmV5LS10ZXh0CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtLWRhcmtlbi0yCiAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIExlYXJuLCBidWlsZCwgYW5kIGNvbm5lY3QgYXMgYSBjb21tdW5pdHkKICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICBHb29nbGUgRGV2ZWxvcGVyIEdyb3VwcyByZXByZXNlbnRzIGEgbmV0d29yayBvZiB0ZWNobmljYWwgY29tbXVuaXRpZXMgdGhhdCBvZmZlciBvcHBvcnR1bml0aWVzIGZvciBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgYW5kIGNvbm5lY3Rpb24uIFRob3NlIHdobyBqb2luIGNhbiBsZWFybiBhYm91dCB0aGUgbGF0ZXN0IEdvb2dsZSB0b29scyBhbmQgdGVjaG5vbG9naWVzLCBhbmQgY2FuIG1lZXQgd2l0aCBsb2NhbCBkZXZlbG9wZXJzIHdpdGggc2ltaWxhciBpbnRlcmVzdHMuCiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgVGhlIHByb2dyYW0gcHJpZGVzIGl0c2VsZiBvbiBmb3N0ZXJpbmcgaW5jbHVzaXZlIGVudmlyb25tZW50cywgd2hlcmUgZXZlcnlvbmUgYW5kIGFueW9uZSBpbnRlcmVzdGVkIGluIHRlY2jigJRmcm9tIGJlZ2lubmVyIGRldmVsb3BlcnMgdG8gZXhwZXJpZW5jZWQgcHJvZmVzc2lvbmFsc+KAlGFyZSBhbGwgd2VsY29tZSB0byBqb2luLgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGRhcmsgY29sb3I9IiM0Mjg1RjQiCiAgICAgICAgICAgICAgICAgICAgICA+Sm9pbiBHb29nbGUgRGV2ZWxvcGVyIEdyb3VwIEphbW11PC92LWNoaXAKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBtZD0iNCIgb3JkZXItbWQ9IjIiIG9yZGVyPSIxIiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEycHgiCiAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJyZXF1aXJlKCdAL2Fzc2V0cy9pbWcvaW1hZ2UuZ2lmJykiCiAgICAgICAgICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgICAgICAgICA8IS0tLSA8cCBjbGFzcz0ibXQtNCBtYi0wIj5TY2FuIHRoZSBRUiBDb2RlIHRvIERvbmF0ZTwvcD4tLT4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgICAgPC92LWNvbD4KICAgIDwvdi1yb3c+CiAgPC92LWNvbnRhaW5lcj4KPC92LW1haW4+Cg=="},null]}